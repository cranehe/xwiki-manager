<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 *
-->
        
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.xpn.xwiki.products</groupId>
    <artifactId>xwiki-enterprise-manager-parent</artifactId>
    <version>2.5.2</version>
  </parent>
  <artifactId>xwiki-enterprise-manager-web</artifactId>
  <name>XWiki Products - Enterprise Manager - Web</name>
  <packaging>war</packaging>
  <description>XWiki Products - Enterprise Manager - Web</description>
  <dependencies>
    <dependency>
      <groupId>com.xpn.xwiki.products</groupId>
      <artifactId>xwiki-enterprise-web</artifactId>
      <version>${product.enterprise.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>com.xpn.xwiki.platform.plugins</groupId>
      <artifactId>xwiki-plugin-application-manager</artifactId>
      <version>${platform.plugin.applicationmanager.version}</version>
    </dependency>
    <dependency>
      <groupId>com.xpn.xwiki.platform.plugins</groupId>
      <artifactId>xwiki-plugin-wiki-manager</artifactId>
      <version>${platform.plugin.wikimanager.version}</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!-- Inject XWiki's configuration (only xwiki.cfg, not hibernate.cfg.xml) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-remote-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>xwiki-configuration-resources</id>
            <!-- The remote resources plugin adds its output directory as a resource directory
                 so that the Maven resources plugin copies these resources to target/classes.
                 However copying them to target/classes will make them appear in WEB-INF/classes
                 in the generated WAR since the WAR plugin copies resources in target/classes in
                 WEB-INF/classes. Thus to prevent this we're binding this execution to a phase
                 that comes after the execution of the resources plugin (which executes in the
                 process-resources phase). Thus this remote resources plugin will execute just
                 after the resources plugin and the resources won't be copied, which is why we're
                 adding a webResource configuration element below in the WAR plugin's
                 configuration. -->
            <phase>process-resources</phase>
            <goals>
              <goal>process</goal>
            </goals>
            <configuration>
              <resourceBundles>
                <resourceBundle>org.xwiki.platform.tools:xwiki-configuration-resources:${platform.tool.configuration.version}</resourceBundle>
              </resourceBundles>
              <properties>
                <xwikiDbHbmCommonExtraMappings>activitystream.hbm.xml</xwikiDbHbmCommonExtraMappings>
                <xwikiCfgPlugins>\
                    com.xpn.xwiki.monitor.api.MonitorPlugin,\
                    com.xpn.xwiki.plugin.skinx.JsSkinExtensionPlugin,\
                    com.xpn.xwiki.plugin.skinx.JsSkinFileExtensionPlugin,\
                    com.xpn.xwiki.plugin.skinx.CssSkinExtensionPlugin,\
                    com.xpn.xwiki.plugin.skinx.CssSkinFileExtensionPlugin,\
                    com.xpn.xwiki.plugin.feed.FeedPlugin,\
                    com.xpn.xwiki.plugin.ldap.LDAPPlugin,\
                    com.xpn.xwiki.plugin.google.GooglePlugin,\
                    com.xpn.xwiki.plugin.mail.MailPlugin,\
                    com.xpn.xwiki.plugin.packaging.PackagePlugin,\
                    com.xpn.xwiki.plugin.query.QueryPlugin,\
                    com.xpn.xwiki.plugin.svg.SVGPlugin,\
                    com.xpn.xwiki.plugin.charts.ChartingPlugin,\
                    com.xpn.xwiki.plugin.fileupload.FileUploadPlugin,\
                    com.xpn.xwiki.plugin.image.ImagePlugin,\
                    com.xpn.xwiki.plugin.userdirectory.UserDirectoryPlugin,\
                    com.xpn.xwiki.plugin.usertools.XWikiUserManagementToolsImpl,\
                    com.xpn.xwiki.plugin.zipexplorer.ZipExplorerPlugin,\
                    com.xpn.xwiki.plugin.autotag.AutoTagPlugin,\
                    com.xpn.xwiki.plugin.lucene.LucenePlugin,\
                    com.xpn.xwiki.plugin.diff.DiffPlugin,\
                    com.xpn.xwiki.plugin.rightsmanager.RightsManagerPlugin,\
                    com.xpn.xwiki.plugin.jodatime.JodaTimePlugin,\
                    com.xpn.xwiki.plugin.scheduler.SchedulerPlugin,\
                    com.xpn.xwiki.plugin.mailsender.MailSenderPlugin,\
                    com.xpn.xwiki.plugin.activitystream.plugin.ActivityStreamPlugin, \
                    com.xpn.xwiki.plugin.watchlist.WatchListPlugin, \
                    com.xpn.xwiki.plugin.tag.TagPlugin,\
                    com.xpn.xwiki.plugin.wikimanager.WikiManagerPlugin,\
                    com.xpn.xwiki.plugin.applicationmanager.ApplicationManagerPlugin
                </xwikiCfgPlugins>
                <xwikiCfgVirtual>1</xwikiCfgVirtual>
                <xwikiCfgAdditionalProperties>
xwiki.work.dir=work
                </xwikiCfgAdditionalProperties>
              </properties>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <!-- Include License resources -->
            <resource>
              <directory>${project.build.directory}/maven-shared-archive-resources/META-INF</directory>
              <targetPath>META-INF</targetPath>
            </resource>
            <resource>
              <directory>${project.build.directory}/maven-shared-archive-resources</directory>
              <targetPath>WEB-INF</targetPath>
              <includes>
                <include>xwiki.cfg</include>
              </includes>
            </resource>
            <resource>
              <directory>${basedir}/src/main/webInfResources</directory>
              <targetPath>WEB-INF</targetPath>
              <filtering>true</filtering>
            </resource>
          </webResources>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>jettyrun</id>
      <build>
        <plugins>
          <!-- Run 'mvn install -Pjettyrun' to execute xwiki in Jetty. Useful for testing.
               Note: You'll need a database set up and running. If you use the HSQLDB profile
               the database is looked for in database/ so it's very likely you'll get an
               empty wiki. You'll need to import some pages in it using a XAR for example. -->
          <plugin>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>maven-jetty-plugin</artifactId>
            <configuration>
              <contextPath>/xwiki</contextPath>
              <classesDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF</classesDirectory>
              <scanIntervalSeconds>10</scanIntervalSeconds>
              <connectors>
                <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                  <port>8080</port>
                  <maxIdleTime>60000</maxIdleTime>
                </connector>
              </connectors>
            </configuration>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
            <!-- Add the database JAR since it's not included in the WAR. The Hibernate config
                 file is automtically added by the remote resources plugin -->
            <dependencies>
              <dependency>
                <groupId>${xwiki.db.jdbc.groupId}</groupId>
                <artifactId>${xwiki.db.jdbc.artifactId}</artifactId>
                <version>${xwiki.db.jdbc.version}</version>
                <scope>runtime</scope>
              </dependency>
            </dependencies>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-remote-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>xwiki-configuration-resources</id>
                <configuration>
                  <properties>
                    <xwikiDbConnectionUrl>${xwiki.db.connection.url}</xwikiDbConnectionUrl>
                  </properties>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <activation>
        <!-- This property is automatically defined by the Release profile in the top level POM when executing
             a release. Thus this profile will be automatically enabled when releasing -->
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <!-- Use the build number plugin to add the SVN revision number to XWiki's
               version.properties file so that it's included when displaying XWiki's version.
               Note: This plugin works by making the buildNumber property available. We then filter
               the version.properties file so that the property is replaced by its value. -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
            <version>1.0-beta-2</version>
            <executions>
              <execution>
                <phase>validate</phase>
                <goals>
                  <goal>create</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <doCheck>true</doCheck>
              <doUpdate>true</doUpdate>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
