<?xml version="1.0" encoding="ISO-8859-1"?>

<xwikidoc>
<web>XEMCode</web>
<name>JSCode</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.Admin</creator>
<author>XWiki.nfournier</author>
<customClass></customClass>
<contentAuthor>XWiki.nfournier</contentAuthor>
<creationDate>1180095847000</creationDate>
<date>1180705249000</date>
<contentUpdateDate>1180705249000</contentUpdateDate>
<version>1.154</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<name>tags</name>
<prettyName>Tags</prettyName>
<unmodifiable>0</unmodifiable>
<relationalStorage>1</relationalStorage>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<size>30</size>
<separator> </separator>
<cache>0</cache>
<separators> ,|</separators>
<values></values>
<number>1</number>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>XEMCode.JSCode</name>
<number>0</number>
<className>XWiki.TagClass</className>
<property>
<tags/>
</property>
</object>
<content>{pre}
&lt;script type="text/javascript"&gt;

// ------------- //
// CreateNewUser //
// ------------- //

function validCreateUserForm()
{
	$("userfirstnameerrormsg").innerHTML="";
	$("userlastnameerrormsg").innerHTML="";
	$("userloginerrormsg").innerHTML="";
	$("useremailerrormsg").innerHTML="";
	
	var flagError = true;
	
	if($("userfirstname").value=='')
	{
		$("userfirstnameerrormsg").innerHTML="$msg.get("userfirstnameneeded")";
		$("userfirstnameerrormsg").style.color="red";
		$("userfirstname").style.backgroundImage="url($xwiki.getSkinFile("black-textarea-yellow.png"))";
		flagError = false;
	}
	else
	{
		$("userfirstname").style.backgroundImage="url($xwiki.getSkinFile("black-textareabg-green.png"))";
	}
	if($("userlastname").value=='')
	{
		$("userlastnameerrormsg").innerHTML="$msg.get("userlastnameneeded")";
		$("userlastnameerrormsg").style.color="red";
		$("userlastname").style.backgroundImage="url($xwiki.getSkinFile("black-textarea-yellow.png"))";
		flagError = false;
	}
	else
	{
		$("userlastname").style.backgroundImage="url($xwiki.getSkinFile("black-textareabg-green.png"))";
	}
	if($("userlogin").value=='')
	{
		$("userloginerrormsg").innerHTML="$msg.get("userloginneeded")";
		$("userloginerrormsg").style.color="red";
		$("userlogin").style.backgroundImage="url($xwiki.getSkinFile("black-textarea-yellow.png"))";
		flagError = false;
	}
	else
	{
		$("userlogin").style.backgroundImage="url($xwiki.getSkinFile("black-textareabg-green.png"))";
	}
	if($("useremail").value=='')
	{
		$("useremailerrormsg").innerHTML="$msg.get("useremailneeded")";
		$("useremailerrormsg").style.color="red";
		$("useremail").style.backgroundImage="url($xwiki.getSkinFile("black-textarea-yellow.png"))";
		flagError = false;
	}
	else
	{
		$("useremail").style.backgroundImage="url($xwiki.getSkinFile("black-textareabg-green.png"))";
	}
	
	if(flagError == true)
	{
		return false;
	}
	else
	{
		document.submit();
	}
}

// ------------- //
// CreateNewWiki
// ------------- //

var userCache = new Object();
var userList = new Array();

function checkAllBox(sfield) {
  var field = document.getElementsByName(sfield);
  if(field.length) {
    for (i = 0; i &lt; field.length; i++)
      field[i].checked = true ;
  } else {
    field.checked = true;
  }
}

function uncheckAllBox(sfield) {
  var field = document.getElementsByName(sfield);
  if(field.length) {
    for (i = 0; i &lt; field.length; i++)
      field[i].checked = false ;
  } else {
    field.checked = false ;
  }
}

function delSelectedUsers() {
  for(var i=0;i&lt;userList.length;i++) {
    var id = userList[i][0] + '_tr';
    if ($(id)) {
      // addClass($(id), 'hidden');
      $(id).parentNode.removeChild($(id));
    }
  }
}

function updateUserList(id, letter) {
  if (userCache[letter]) {
    $(id).innerHTML = userCache[letter];
    delSelectedUsers();
  } else {
    var surl = getXWikiURL("XEMServices", "UserListDisplay", "view", "xpage=plain&amp;lletter=" + letter);
    var myAjax = new Ajax.Updater(
      id, 
      surl, 
      {
        method: 'get',
        evalScripts: true,
        onComplete: function(transport) {
          userCache[letter] = transport.responseText;
          delSelectedUsers();
          init_sortnfilter();
      }
    });
  }
}

function addSelectedUsersToList(sulist) {
  var ulist = document.getElementsByName(sulist);
  if(ulist.length)
  {
    /* decremental loop -&gt; removeChild devre*/
    for (var i = ulist.length - 1; i &gt;= 0; i--) {
	    if (ulist[i].checked == true) {
	      var userid = ulist[i].id;
  	        var userA = new Array();
	        userA.push(userid);
	        userA.push($(userid + '_last_name').value);
	        userA.push($(userid + '_first_name').value);
	        userA.push($(userid + '_email').value);
	        userList.push(userA);
            //addClass($(userid + '_tr'), 'hidden');
            $(userid + '_tr').parentNode.removeChild($(userid + '_tr'));
	    }
  	}
  }
  else
  {
  	if (ulist.checked == true) 
  	{
      var userid = ulist.id;
        var userA = new Array();
        userA.push(userid);
        userA.push($(userid + '_last_name').value);
        userA.push($(userid + '_first_name').value);
        userA.push($(userid + '_email').value);
        userList.push(userA);
        //addClass($(userid + '_tr'), 'hidden');
        $(userid + '_tr').parentNode.removeChild($(userid + '_tr'));
    }
  }

  var u2table = $('userList2');
  var u2tbody = document.createElement('tbody');
  u2table.appendChild(u2tbody);
  for(var i=0;i&lt;userList.length;i++)
  {
    var row = document.createElement('tr');
    var cell = document.createElement('td');
    var input = document.createElement('input');
    input.setAttribute('id', userList[i][0]);
    input.setAttribute('name', 'checkuserselected');
    input.setAttribute('type', 'checkbox');
    cell.appendChild(input);
    row.appendChild(cell);
    var cell = document.createElement('td');
    cell.appendChild(document.createTextNode(userList[i][1]));
    row.appendChild(cell);
    var cell = document.createElement('td');
    cell.appendChild(document.createTextNode(userList[i][2]));
    row.appendChild(cell);
    var cell = document.createElement('td');
    cell.appendChild(document.createTextNode(userList[i][3]));
    row.appendChild(cell);
    u2tbody.appendChild(row);
  }
}

function validCreateWikiForm()
{
	$("wikinameerrormsg").innerHTML="";
	$("wikidescerrormsg").innerHTML="";
	$("wikiadminerrormsg").innerHTML="";
	$("wikitemplateerrormsg").innerHTML="";
	$("wikivisibilityerrormsg").innerHTML="";

	var flagError = true;
	
	if($("wikiname").value=='')
	{
		$("wikinameerrormsg").innerHTML="$msg.get("wikinameneeded")";
		$("wikinameerrormsg").style.color="red";
		$("wikiname").style.backgroundImage="url($xwiki.getSkinFile("black-textarea-yellow.png"))";
		flagError = false;
	}
	else
	{
		$("wikiname").style.backgroundImage="url($xwiki.getSkinFile("black-textareabg-green.png"))";
	}
	if($("wikidesc").value=='')
	{
		$("wikidescerrormsg").innerHTML="$msg.get("wikidescneeded")";
		$("wikidescerrormsg").style.color="red";
		$("wikidesc").style.backgroundImage="url($xwiki.getSkinFile("black-textarea-yellow.png"))";
		flagError = false;
	}
	else
	{
		$("wikidesc").style.backgroundImage="url($xwiki.getSkinFile("black-textareabg-green.png"))";
	}
	if($("wikiadmin").value=='')
	{
		$("wikiadminerrormsg").innerHTML="$msg.get("wikiadminneeded")";
		$("wikiadminerrormsg").style.color="red";
		$("wikiadmin").style.backgroundImage="url($xwiki.getSkinFile("black-textarea-yellow.png"))";
		$("wikiadmin").style.backgroundColor="#FFFFB3";
		flagError = false;
	}
	else
	{
		$("wikiadmin").style.backgroundImage="url($xwiki.getSkinFile("black-textareabg-green.png"))";
		$("wikiadmin").style.backgroundColor="#DEFCE3";
	}
	if($("wikitemplate").value=='')
	{
		$("wikitemplateerrormsg").innerHTML="$msg.get("wikitemplateneeded")";
		$("wikitemplateerrormsg").style.color="red";
		$("wikitemplate").style.backgroundImage="url($xwiki.getSkinFile("black-textarea-yellow.png"))";
		$("wikitemplate").style.backgroundColor="#FFFFB3";
		flagError = false;
	}
	else
	{
		$("wikitemplate").style.backgroundImage="url($xwiki.getSkinFile("black-textareabg-green.png"))";
		$("wikitemplate").style.backgroundColor="#DEFCE3";
	}
	if($("wikivisibility").value=='')
	{
		$("wikivisibilityerrormsg").innerHTML="$msg.get("wikivisibilityneeded")";
		$("wikivisibilityerrormsg").style.color="red";
		$("wikivisibility").style.backgroundImage="url($xwiki.getSkinFile("black-textarea-yellow.png"))";
		$("wikivisibility").style.backgroundColor="#FFFFB3";
		flagError = false;
	}
	else
	{
		$("wikivisibility").style.backgroundImage="url($xwiki.getSkinFile("black-textareabg-green.png"))";
		$("wikivisibility").style.backgroundColor="#DEFCE3";
	}
	
	if(flagError == true)
	{
		return false;
	}
	else
	{
		document.submit();
	}
}

// ------------------ //
// XWiki URL Builders //
// ------------------ //

function getXWikiURL(space, page) {
  return getXWikIURL(wikiPage, "", "");
}

function getXWikiURL(space, page, mode) {
  return getXWikIURL(space, page, mode, "");
}

function getXWikiURL(space, page, mode, args) {
  var surl = "/xwiki/bin/" + mode + "/" + space + "/" + page;
  if (args != "")
    surl = surl + "?" + args;
  return surl;
}

// ----- //
// Utils //
// ----- //

/* get the absolute posion (from top-left corner) of a HTML element, in pixels */
function getAbsolutePos(element) {
  var SL = 0, ST = 0;
  var is_div = /^div$/i.test(element.tagName);
  if (is_div &amp;&amp; element.scrollLeft) {
    SL = element.scrollLeft;
  }
  if (is_div &amp;&amp; element.scrollTop) {
    ST = element.scrollTop;
  }
  var r = { x: element.offsetLeft - SL, y: element.offsetTop - ST };
  if (element.offsetParent) {
    var tmp = this.getAbsolutePos(element.offsetParent);
    r.x += tmp.x;
    r.y += tmp.y;
  }
  return r;
}

function removeItemFromArray(array, item) {
  var i = 0;
  while (i &lt; array.length) {
    if (array[i] == item) {
      array.splice(i, 1);
    } else {
      i++;
    }
  }
}

// ------------ //
// User profile //
// ------------ //

/* various checks + save of the new password */
function passwdchange() {
  // var oldpasswd = $('oldpasswd').value;
  $('passwderror').innerHTML = '';
  $('passwdsuccess').innerHTML = '';
  var newpasswd1 = $('newpasswd1').value;
  var newpasswd2 = $('newpasswd2').value;
  if (newpasswd1 != newpasswd2) {
    $('passwderror').innerHTML = '$msg.get("passwdnotmatch")';
    return;
  }
  if (newpasswd1.length &lt; 4) {
    $('passwderror').innerHTML = '$msg.get("passwdtooshort")';
    return;
  }
  var surl = getXWikiURL("$doc.web", "$doc.name", "save", "");
  var parameters = 'XWiki.XWikiUsers_0_password=' + newpasswd1;
  var myAjax = new Ajax.Request (
  surl, 
  {
    method: 'post',
    postBody: parameters,
    onComplete: function() {
      Field.clear('newpasswd1', 'newpasswd2');
      $('passwdsuccess').innerHTML = '$msg.get("passwdupdated")';
      authuser('$doc.fullName', newpasswd1);
    }
  });  
}

&lt;/script&gt;
{/pre}
</content></xwikidoc>